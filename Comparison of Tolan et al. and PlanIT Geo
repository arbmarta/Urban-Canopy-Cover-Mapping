// For use in Google Earth Engine

// Display the census area shapefiles
var urban_areas = ee.FeatureCollection('users/alexjfmartin/Urban_Areas');

// Display the census area shapefiles on the map
Map.centerObject(urban_areas);
Map.addLayer(urban_areas, {color: 'red'}, 'Urban Areas');

// Define the canopy height image and apply a mask for canopy height >= 1 meter
var canopyHeight = ee.ImageCollection('projects/meta-forest-monitoring-okw37/assets/CanopyHeight').mosaic();
var maskedCanopyHeight = canopyHeight.updateMask(canopyHeight.gte(1));  // Mask out values < 1

// Center the map on the specified geometry region
Map.centerObject(urban_areas, 10);  // Adjust zoom as needed

// Visualization settings
var palettes = require('users/gena/packages:palettes');

// Other layers for reference (optional)
var ethcanopyheight = ee.Image('users/nlang/ETH_GlobalCanopyHeight_2020_10m_v1');
Map.addLayer(ethcanopyheight.clip(urban_areas), {
    min: 0,
    max: 25,
    palette: palettes.matplotlib.viridis[7]
}, 'Canopy Height Lang 2022 98%', false);

var umdheight = ee.ImageCollection("users/potapovpeter/GEDI_V27").mosaic();
Map.addLayer(umdheight.clip(urban_areas), {
    min: 0,
    max: 25,
    palette: palettes.matplotlib.viridis[7]
}, 'Canopy Height Potapov 2021 95%', false);

// Our layers (display maskedCanopyHeight)
Map.addLayer(maskedCanopyHeight.clip(urban_areas), {
    min: 0,
    max: 25,
    palette: palettes.matplotlib.viridis[7]
}, 'Canopy Height >= 1 [meters]');


// Export function
function exportCanopyHeight() {
    Export.image.toDrive({
        image: maskedCanopyHeight.clip(urban_areas),  // Use masked image for export
        description: 'CanopyHeight_Export',
        folder: 'EarthEngineExports',
        region: geometry,
        scale: 1,
        fileFormat: 'GeoTIFF',
        maxPixels: 1e13
    });
}

// Create export button (this is optional; you can just run `exportCanopyHeight` directly)
var exportButton = ui.Button({
    label: 'Export Canopy Height to Drive',
    style: {width: '200px', color: '#4CAF50'},
    onClick: exportCanopyHeight
});

// Display the export button (optional)
var controlPanel = ui.Panel({widgets: [exportButton]});
ui.root.add(controlPanel);

// Extract the PlanIt Geo urban tree canopy area (%) (most current imagery) ("UTC_Pct_y2") from the shapefiles
var block_groups_canopycover = block_groups.aggregate_array('UTC_Pct_y2');
var census_tract_canopycover = census_tract.aggregate_array('UTC_Pct_y2');
var urban_areas_canopycover = urban_areas.aggregate_array('UTC_Pct_y2');

// Create a canopy cover chart for each PlanIt Geo canopy cover percentage from the shapefiles
// Chart: census block groups
var block_groups_canopycover_chart = ui.Chart.array.values({
  array: block_groups_canopycover,
  axis: 0
})
.setOptions({
  title: 'Canopy Cover (%) for Block Groups',
  hAxis: {title: 'Polygon Index'},
  vAxis: {title: 'Canopy Cover (%)'},
  pointSize: 4
});

print(block_groups_canopycover_chart);

// Chart: census tract groups
var census_tract_canopycover_chart = ui.Chart.array.values({
  array: census_tract_canopycover,
  axis: 0
})
.setOptions({
  title: 'Canopy Cover (%) for Census Tracts',
  hAxis: {title: 'Polygon Index'},
  vAxis: {title: 'Canopy Cover (%)'},
  pointSize: 4
});

print(census_tract_canopycover_chart);

// Chart: urban areas groups
var urban_areas_canopycover_chart = ui.Chart.array.values({
  array: urban_areas_canopycover,
  axis: 0
})
.setOptions({
  title: 'Canopy Cover (%) for Urban Areas',
  hAxis: {title: 'Polygon Index'},
  vAxis: {title: 'Canopy Cover (%)'},
  pointSize: 4
});

print(urban_areas_canopycover_chart);

// Extract the PlanIt Geo urban tree canopy area (%) (historic imagery) ("UTC_Pct_y1") from the shapefiles
var block_groups_canopycover_historic = block_groups.aggregate_array('UTC_Pct_y1');
var census_tract_canopycover_historic = census_tract.aggregate_array('UTC_Pct_y1');
var urban_areas_canopycover_historic = urban_areas.aggregate_array('UTC_Pct_y1');

// Create a canopy cover chart for each PlanIt Geo canopy cover percentage from the shapefiles
// Chart: census block groups
var block_groups_canopycover_chart_historic = ui.Chart.array.values({
  array: block_groups_canopycover_historic,
  axis: 0
})
.setOptions({
  title: 'Canopy Cover (%) for Block Groups (Historic)',
  hAxis: {title: 'Polygon Index'},
  vAxis: {title: 'Canopy Cover (%)'},
  pointSize: 4
});

print(block_groups_canopycover_chart_historic);

// Chart: census tract groups
var census_tract_canopycover_chart_historic = ui.Chart.array.values({
  array: census_tract_canopycover_historic,
  axis: 0
})
.setOptions({
  title: 'Canopy Cover (%) for Census Tracts (Historic)',
  hAxis: {title: 'Polygon Index'},
  vAxis: {title: 'Canopy Cover (%)'},
  pointSize: 4
});

print(census_tract_canopycover_chart_historic);

// Chart: urban areas groups
var urban_areas_canopycover_chart_historic = ui.Chart.array.values({
  array: urban_areas_canopycover_historic,
  axis: 0
})
.setOptions({
  title: 'Canopy Cover (%) for Urban Areas (Historic)',
  hAxis: {title: 'Polygon Index'},
  vAxis: {title: 'Canopy Cover (%)'},
  pointSize: 4
});

print(urban_areas_canopycover_chart_historic);
